<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		<!--开启注解扫描  -->
		<context:component-scan base-package="com.lishan.gjq"></context:component-scan>
		<!--注解驱动  -->
		<mvc:annotation-driven/>
		<!--手动放行静态资源  -->
		<mvc:resources location="/js/" mapping="/js/**"/>
		<mvc:resources location="/bank_img/" mapping="/bank_img/**"/>
		<mvc:resources location="/css/" mapping="/css/**"/>
		<mvc:resources location="/image/" mapping="/image/**"/>
		<mvc:resources location="/images/" mapping="/images/**"/>
		<!--视图解析器  -->
		 <!-- 真正的页面路径 = 前缀 + 去掉后缀名的页面名称 + 后缀 前缀 -->
		<!--prefix ,suffix是SpringMVC视图解析器的一个属性
		prefix指的是访问页面的前缀，指定页面存放的文件夹,
		suffix是指文件的后缀名  -->
		  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/WEB-INF/jsp/"></property>
			<property name="suffix" value=".jsp"></property>
		</bean> 
		<!--配置数据源  -->
		<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url"
			 value="jdbc:mysql://localhost:3306/estore?
			 useUnicoding=true&amp;characterEncoding=utf-8"/>
			 <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
			 <property name="username" value="root"/>
			 <property name="password" value="root"/>
		</bean>
		<!--Mapper的配置  -->
		<!--配置Session工厂  -->
		<!--让spring管理sqlsessionfactory 使用mybatis和spring整合包中的   -->
		<bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">
			<!--数据库连接池  -->
			<property name="dataSource" ref="ds"/>
			<property name="mapperLocations"
			value="classpath:mapper/*.xml"/>
		</bean>
		<!--配置Mapper扫描器  -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.lishan.gjq"></property>
		</bean>
		<!--声明事物管理组件  -->
		<bean id="txManager" 
		     class=" org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="ds"></property>
		</bean>
		<!--事务的配置  -->
		<!--事务管理器就是用于管理对数据库的一系列读写操作，进行统一提交或回滚，
		这样能有效的防止数据库出现问题，如：脏读，幻读等 -->	
		<tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
			<!--SUPPORTS 指定的方法支持当前事务，但若当前没有事务，也可以以非事务方式执行。   -->
				 <tx:method name="save*" propagation="REQUIRED" 
				 rollback-for="java.lang.Exception"/>
                 <tx:method name="insert*" propagation="REQUIRED" 
                 rollback-for="java.lang.Exception"/>
                 <tx:method name="delete*" propagation="REQUIRED"
                 rollback-for="java.lang.Exception" />
                 <tx:method name="update*" propagation="REQUIRED"
                 rollback-for="java.lang.Exception" />
            <!--SUPPORTS 指定的方法支持当前事务，但若当前没有事务，也可以以非事务方式执行   -->
            <!--read-only 事务是否为只读，默认值为false   -->
                 <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
                 <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			     </tx:attributes>
		</tx:advice>
		<!--AOP事务配置  -->
		<!-- <aop:config proxy-target-class="true">
			<aop:advisor advice-ref="txAdvice" 
			pointcut="within(com.gjq.serviceImpl..*)"/>
		</aop:config> -->
		<!--文件上传解析器  -->
		<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="defaultEncoding" value="utf-8"></property>
			<!--设置最大支持 的上传文件大小 B -->
			<property name="maxUploadSize" value="524244000"></property>
		</bean>
		</beans>